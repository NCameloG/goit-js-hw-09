{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAwBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACPH,EACFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,OA9BvBQ,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAAC,GACzDA,EAAMC,iBAMN,IAJA,IAAMC,EAAaC,OAAOH,EAAMI,cAAcf,MAAMgB,OAC9CC,EAAYH,OAAOH,EAAMI,cAAcG,KAAKF,OAC5CG,EAAcL,OAAOH,EAAMI,cAAcK,OAAOJ,OAE7CK,EAAI,EAAGA,GAAKF,EAAaE,IAChCvB,EAAcuB,EAAGR,EAAaI,GAAaI,EAAI,IAC5CC,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAGjD4B,OAAM,SAAAL,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBwB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\ndocument.querySelector('.form').addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delayInput = Number(event.currentTarget.delay.value);\n  const stepInput = Number(event.currentTarget.step.value);\n  const amountInput = Number(event.currentTarget.amount.value);\n\n  for (let i = 1; i <= amountInput; i++) {\n    createPromise(i, delayInput + stepInput * (i - 1))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) =>{\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n  if (shouldResolve) {\n    resolve({ position, delay });\n    // Fulfill\n  } else {\n    reject({ position, delay});\n    // Reject\n  }\n});\n});\n}\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delayInput","Number","currentTarget","value","stepInput","step","amountInput","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.d4ffc354.js.map"}